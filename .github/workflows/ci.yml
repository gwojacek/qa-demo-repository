# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * *'        # every day at midnight UTC
  workflow_dispatch:          # manual trigger
    inputs:
      browser:
        description: 'Which browser to run UI tests on'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chrome
          - opera

jobs:
  ui-tests:
    runs-on: ubuntu-latest

    # run once per browser
    strategy:
      matrix:
        browser: [ chrome, opera ]
      fail-fast: false

    # if manually dispatched, only run the selected browser (or 'all')
    if: >
      github.event_name != 'workflow_dispatch' ||
      github.event.inputs.browser == 'all' ||
      github.event.inputs.browser == matrix.browser

    services:
      selenium:
        # always use the Chrome standalone image
        image: selenium/standalone-chrome:latest
        # only mount the OperaDriver when matrix.browser=opera
        options: ${{ matrix.browser == 'opera' && format('-v {0}/tools/operadriver:/usr/local/bin/opera-driver', github.workspace) || '' }}
        # always set this varâ€”Chrome will ignore it if unused
        env:
          SE_OPERA_DRIVER_EXECUTABLE: /usr/local/bin/opera-driver
        ports:
          - 4444:4444

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build test-runner image
        run: docker-compose build test-runner

      - name: Run UI tests (${{ matrix.browser }})
        env:
          BROWSER: ${{ matrix.browser }}
          # point your tests at the "selenium" service
          SELENIUM_REMOTE_URL: http://selenium:4444/wd/hub
        run: ./run_tests.sh -b $BROWSER -m ui

      - name: Publish UI test report (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-report-${{ matrix.browser }}
          path: tests/artifacts/report.html
